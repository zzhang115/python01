<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<?xml-stylesheet type="text/xsl" href="css/rss.xslt"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:trackback="http://madskills.com/public/xml/rss/module/trackback/" xmlns:wfw="http://wellformedweb.org/CommentAPI/" xmlns:slash="http://purl.org/rss/1.0/modules/slash/"><channel><title>python相关的python 教程和python 下载你可以在老王python里寻觅</title><link>http://www.cnpythoner.com/</link><description>老王python</description><generator>RainbowSoft Studio Z-Blog 1.8 Walle Build 91204</generator><language>zh-CN</language><copyright>老王python_每天更新一篇python教程.</copyright><pubDate>Tue, 21 Mar 2017 22:05:01 +0800</pubDate><item><title>django sql语句查询（不需要插件）</title><author>a@b.com (laowang)</author><link>http://www.cnpythoner.com/post/320.html</link><pubDate>Sun, 11 Jan 2015 11:28:29 +0800</pubDate><guid>http://www.cnpythoner.com/post/320.html</guid><description><![CDATA[<p>我们通常用<a href="http://www.cnpythoner.com/post/113.html" target="_blank">django model&nbsp;</a>来进行一些数据查询的时候，对内部执行的sql语句流程是不了解的，这对我们做一些sql方面的优化造成了一些困扰。</p><p>其实django model对象内部就有一个能够查询当前执行的sql语句。</p><p>比如：</p><p>你需要调用文章类别：</p><p>antype = Articletype.objects.values('id').filter(parent__isnull=True).exclude(id=6)</p><p>上面是输出类别的id,条件是parent_id is Null 并且id&lt;&gt;6</p><p>下面我们看下怎么用django 在控制台输出sql语句：</p><p>我们直接调用：</p><p>print antype.query</p><p>每个model对象都有一个query属性，输出当前执行的sql语句。</p><p>这样就行，输出结果：</p><p>SELECT `article_articletype`.`id` FROM `article_articletype` LEFT OUTER JOIN `article_articletype` T2 ON (`article_articletype`.`parent_id` = T2.`id`) WHERE (T2.`id` IS NULL AND NOT (`article_articletype`.`id` = 6 )) ORDER BY `article_articletype`.`rank` ASC, `article_articletype`.`id` DESC</p><p>上面的order字段信息我是在定义model的时候在class meta上就定义好了。</p><p>Copyright © 2008</p><p><a href="http://www.cnpythoner.com/post/320.html" target="_blank">继续阅读《django sql语句查询（不需要插件）》的全文内容...</a></p><p>分类: <a href="http://www.cnpythoner.com/catalog.asp?cate=2">django教程</a> | Tags:  | <a href="http://www.cnpythoner.com/post/320.html#comment" target="_blank">添加评论</a>(0)</p><p><a href="http://www.cnpythoner.com/post/320.html#comment" target="_blank">还没有相关文章，您来说两句？</a></p>]]></description><category>django教程</category><comments>http://www.cnpythoner.com/post/320.html#comment</comments><wfw:comment>http://www.cnpythoner.com/</wfw:comment><wfw:commentRss>http://www.cnpythoner.com/feed.asp?cmt=320</wfw:commentRss><trackback:ping>http://www.cnpythoner.com/cmd.asp?act=tb&amp;id=320&amp;key=5f05c8eb</trackback:ping></item><item><title>python 生成word中文字体</title><author>a@b.com (laowang)</author><link>http://www.cnpythoner.com/post/319.html</link><pubDate>Wed, 25 Dec 2013 17:15:50 +0800</pubDate><guid>http://www.cnpythoner.com/post/319.html</guid><description><![CDATA[<p>&nbsp;我们今天用python生成word文件，主要是用到了PyRTF包生成rtf文件，由于PyRTF的包中文教程比较少，所以特此记录几篇文章，也希望给大家有一些帮助。</p><p>开始碰到一个问题，就是不能给word文件添加中文的字体，找了很久的资料，发现解决方法是：</p><p>&nbsp;</p><p class="p1"><span class="s1">&nbsp;</span><span class="s2">from</span> PyRTF <span class="s3">import</span> *</p><p class="p1">doc = <span class="s2">Document</span>() &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="s3">&nbsp;</span></p><p class="p1">&nbsp;ss = doc.StyleSheet&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="s3">&nbsp;</span></p><p class="p2">&nbsp;<span class="s4">&nbsp;</span># 在这里加入中文字体，\xcb\xce\xcc\xe5是&ldquo;宋体&rdquo;的中文内码<span class="s4"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="s3">&nbsp;</span></p><p class="p1"><span class="s1">&nbsp;</span>&nbsp;ss.Fonts.append(Font(<span class="s5">&quot;</span>\\<span class="s5">'cb</span>\\<span class="s5">'ce</span>\\<span class="s5">'cc</span>\\<span class="s5">'e5&quot;</span>, <span class="s5">'modern'</span>, <span class="s6">134</span>, <span class="s6">30</span>)) &nbsp; &nbsp; &nbsp; <span class="s3">&nbsp;</span></p><p class="p1"><span class="s1">&nbsp;</span>&nbsp;section = Section()&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="s3">&nbsp;</span></p><p class="p1"><span class="s1">&nbsp;</span>&nbsp;doc.Sections.append(section) &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="s3">&nbsp;</span></p><p class="p1">&nbsp;</p><p class="p3">&nbsp;tps = TextPS(font=<span class="s8">getattr</span>(ss.Fonts, <span class="s9">&quot;</span>\\<span class="s9">'cb</span>\\<span class="s9">'ce</span>\\<span class="s9">'cc</span>\\<span class="s9">'e5&quot;</span>))</p><p class="p3">用下上面的代码，应该可以用用python在WORD上使用中文字体了</p><p class="p3">&nbsp;</p><p>Copyright © 2008</p><p><a href="http://www.cnpythoner.com/post/319.html" target="_blank">继续阅读《python 生成word中文字体》的全文内容...</a></p><p>分类: <a href="http://www.cnpythoner.com/catalog.asp?cate=1">python教程</a> | Tags:  | <a href="http://www.cnpythoner.com/post/319.html#comment" target="_blank">添加评论</a>(0)</p><p><a href="http://www.cnpythoner.com/post/319.html#comment" target="_blank">还没有相关文章，您来说两句？</a></p>]]></description><category>python教程</category><comments>http://www.cnpythoner.com/post/319.html#comment</comments><wfw:comment>http://www.cnpythoner.com/</wfw:comment><wfw:commentRss>http://www.cnpythoner.com/feed.asp?cmt=319</wfw:commentRss><trackback:ping>http://www.cnpythoner.com/cmd.asp?act=tb&amp;id=319&amp;key=d2191ac7</trackback:ping></item><item><title>我用python经常做的事情</title><author>a@b.com (laowang)</author><link>http://www.cnpythoner.com/post/318.html</link><pubDate>Wed, 13 Nov 2013 22:34:04 +0800</pubDate><guid>http://www.cnpythoner.com/post/318.html</guid><description><![CDATA[<p>我用python日常的工作：</p><p>1 做网站，开发内部系统。</p><p>2 页面抓取数据分析。</p><p>3 中文词库，聚合分类等。比如完成一些<a href="http://www.cnpythoner.com/catalog.asp?cate=15" target="_blank">SEO的需求</a></p><p>4 一般日常的工作。&nbsp;</p><p><span style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; line-height: 20px;">觉的比较好的Python包</span></p><ul style="margin: 0px;">    <li style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; line-height: 20px;">    <p style="margin: 0px; padding: 0px;"><a href="http://www.pythonware.com/products/pil/" style="color: rgb(59, 115, 175); text-decoration: none;">PIL</a>用来处理图像非常方便，读取，改写，转换，保存，创建，底层数据访问等都支持都不错</p>    </li>    <li style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; line-height: 20px;">    <p style="margin: 0px; padding: 0px;"><a href="http://lxml.de/" style="color: rgb(59, 115, 175); text-decoration: none;">lxml</a>用来处理HTML很便利，兼容性好，效率高。但是输入的最好是unicode，除非是XML包装的HTML.</p>    </li>    <li style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; line-height: 20px;">    <p style="margin: 0px; padding: 0px;"><a href="http://numpy.scipy.org/" style="color: rgb(59, 115, 175); text-decoration: none;">numpy</a>与<a href="http://www.scipy.org/" style="color: rgb(59, 115, 175); text-decoration: none;">scipy</a>也许我们实际用得不多，但是在数学运算的时候确实需要，而且很多包都依赖它们，例如下面的matplotlib</p>    </li>    <li style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; line-height: 20px;">    <p style="margin: 0px; padding: 0px;"><a href="http://matplotlib.sourceforge.net/" style="color: rgb(59, 115, 175); text-decoration: none;">matplotlib</a>用来画曲线图，统计图，曲面图等都非常好</p>    </li>    <li style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; line-height: 20px;">    <p style="margin: 0px; padding: 0px;"><a href="https://bitbucket.org/raphaelzhang/my-softs/src/tip/backup/dev/python2-chardet-2.0.1.tgz" style="color: rgb(59, 115, 175); text-decoration: none;">chardet</a>可以用来推测网页的编码，原下载页面已经不可访问了，因此备份了一个</p>    </li>    <li style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; line-height: 20px;">    <p style="margin: 0px; padding: 0px;"><a href="http://code.google.com/p/protobuf/" style="color: rgb(59, 115, 175); text-decoration: none;">Protobuf</a>是一个在时间与空间上都非常高效的数据包编码解码包，可用于网络通讯，支持C/Python/Java等语言</p>    </li>    <li style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; line-height: 20px;">    <p style="margin: 0px; padding: 0px;"><a href="http://twistedmatrix.com/trac/" style="color: rgb(59, 115, 175); text-decoration: none;">twisted</a>是一个很棒的网络客户端与服务器端的开发框架，开发TCP/UDP/HTTP/SMTP等客户端与服务器端都很方便</p>    </li>    <li style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; line-height: 20px;">    <p style="margin: 0px; padding: 0px;"><a href="http://freewisdom.org/projects/python-markdown/" style="color: rgb(59, 115, 175); text-decoration: none;">markdown</a>可以用来将markdown文档，例如本文档，转化为HTML格式，当然，使用<a href="https://bitbucket.org/raphaelzhang/md2html" style="color: rgb(59, 115, 175); text-decoration: none;">md2html</a>会更方便。另一个选择是使用<a href="http://johnmacfarlane.net/pandoc/" style="color: rgb(59, 115, 175); text-decoration: none;">Pandoc</a>软件，能转换极多的文档格式</p>    </li>    <li style="color: rgb(51, 51, 51); font-family: Arial, sans-serif; font-size: 14px; line-height: 20px;">    <p style="margin: 0px; padding: 0px;">&nbsp;beautifulsoup 分析HTML页面数据。</p>    </li>    <li>    <p style="margin: 0px; padding: 0px;"><font color="#333333" face="Arial, sans-serif"><span style="font-size: 14px; line-height: 20px;">scrapy 一个python的采集框架。</span></font></p>    </li>    <li>    <p style="margin: 0px; padding: 0px;">nltk,jieba 自然语言处理等。</p>    </li></ul><p>python 的不爽的地方：</p><p>1 编码的问题。</p><p>2&nbsp;<span style="color: rgb(68, 68, 68); font-family: 'Open Sans', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 24px;">并发与性能。</span></p><p>3做客户端软件，安装包打包会比较大。&nbsp;</p><p>Copyright © 2008</p><p><a href="http://www.cnpythoner.com/post/318.html" target="_blank">继续阅读《我用python经常做的事情》的全文内容...</a></p><p>分类: <a href="http://www.cnpythoner.com/catalog.asp?cate=1">python教程</a> | Tags:  | <a href="http://www.cnpythoner.com/post/318.html#comment" target="_blank">添加评论</a>(0)</p><p><a href="http://www.cnpythoner.com/post/318.html#comment" target="_blank">还没有相关文章，您来说两句？</a></p>]]></description><category>python教程</category><comments>http://www.cnpythoner.com/post/318.html#comment</comments><wfw:comment>http://www.cnpythoner.com/</wfw:comment><wfw:commentRss>http://www.cnpythoner.com/feed.asp?cmt=318</wfw:commentRss><trackback:ping>http://www.cnpythoner.com/cmd.asp?act=tb&amp;id=318&amp;key=7fe28735</trackback:ping></item><item><title>Python 在 Linux 系统运维中都有哪些应用？ </title><author>a@b.com (laowang)</author><link>http://www.cnpythoner.com/post/317.html</link><pubDate>Mon, 07 Oct 2013 22:16:24 +0800</pubDate><guid>http://www.cnpythoner.com/post/317.html</guid><description><![CDATA[python在系统管理上的优势在与强大的开发能力和完整的工具链。python的工程开发能力强大，远强于各种shell和perl。易读易写，兼具面向对象和函数式风格，还有不错元编程能力。通过系统化的将各种管理工具结合，对上述的各类工具进行二次开发，形成统一的服务器管理系统,非常合适运维人员编写一些自动化的软件程序。<br/><br/>python在服务器管理工具上非常丰富，配置管理(saltstack) 批量执行( <a href="http://www.cnpythoner.com/post/297.html" target="_blank">fabric</a>, saltstack) 监控(Zenoss, nagios 插件) 虚拟化管理( python-libvirt) 进程管理 (supervisor) 云计算(openstack) ...... 还有大部分系统C库都有python绑定。<br/>对于流程确定的事情，最终一定是纳入系统管理的体系，写成程序，成为系统的一部分。而不是无法复用游离与整体的各种脚本。<br/>随着云计算时代的来临，中小型公司，不需要运维了。大型公司，没有工程开发能力的运维，是没有竞争力的。<br/><br/>另外我们这里开设对linux人员的<a href="http://www.cnpythoner.com/peixun/info.html" target="_blank">python视频培训课程</a>，有兴趣的朋友可以参加。<p>Copyright © 2008</p><p><a href="http://www.cnpythoner.com/post/317.html" target="_blank">继续阅读《Python 在 Linux 系统运维中都有哪些应用？ 》的全文内容...</a></p><p>分类: <a href="http://www.cnpythoner.com/catalog.asp?cate=16">it运维管理系统和软件</a> | Tags:  | <a href="http://www.cnpythoner.com/post/317.html#comment" target="_blank">添加评论</a>(0)</p><p><a href="http://www.cnpythoner.com/post/317.html#comment" target="_blank">还没有相关文章，您来说两句？</a></p>]]></description><category>it运维管理系统和软件</category><comments>http://www.cnpythoner.com/post/317.html#comment</comments><wfw:comment>http://www.cnpythoner.com/</wfw:comment><wfw:commentRss>http://www.cnpythoner.com/feed.asp?cmt=317</wfw:commentRss><trackback:ping>http://www.cnpythoner.com/cmd.asp?act=tb&amp;id=317&amp;key=b1dfb691</trackback:ping></item><item><title>python编写调用shell命令脚本</title><author>a@b.com (laowang)</author><link>http://www.cnpythoner.com/post/316.html</link><pubDate>Fri, 04 Oct 2013 22:16:52 +0800</pubDate><guid>http://www.cnpythoner.com/post/316.html</guid><description><![CDATA[很多运维人员习惯用shell脚本来处理一些linux下的相关应用，今天给大家推荐python,并且<b>python写相关的shell脚本</b>可读性和维护性会比用shell好。 下面介绍和linux相关的一些小的应用。<br/><br/>os.system(command)<br/><br/>这个函数可以调用 shell运行命令行command并且返回它的返回值。试一下在 python的解释器里输入os.system(”ls -l”)，就可以看到”ls”列出了当前目录下的文件。可以说，通过这个函数，python就拥有了shell的所有能力。呵呵。。不过，通常这条命令不需要用到。因为shell常用的那些命令在python中通常有对应而且同样简洁的写法。<br/><br/>shell中最常用的是ls命令，python对应的写法是：os.listdir(dirname)，这个函数返回字符串列表，里面是所有的文件名，不过不包含”.”和”..”。如果要遍历整个目录的话就会比较复杂一点。我们等下再说吧。先在解释器里试一下：<br/><br/>>>> os.listdir(”/”)<br/><br/>[’tmp’, ‘misc’, ‘opt’, ‘root’, ‘.autorelabel’, ’sbin’, ’srv’, ‘.autofsck’, ‘mnt’, ‘usr’, ‘var’, ‘etc’, ’selinux’, ‘lib’, ‘net’, ‘lost found’, ’sys’, ‘media’, ‘dev’, ‘proc’, ‘boot’, ‘home’, ‘bin’]<br/><br/>就像这样，接下去所有命令都可以在python的解释器里直接运行观看结果。<br/><br/>对应于cp命令的是：shutil.copy(src,dest)，这个函数有两个参数，参数src是指源文件的名字，参数dest则是目标文件或者目标目录的名字。 如果dest是一个目录名，就会在那个目录下创建一个相同名字的文件。与shutil.copy函数相类似的是 shutil.copy2(src,dest)，不过copy2还会复制最后存取时间和最后更新时间。<br/><br/>不过，shell的cp命令还可以复制目录，python的shutil.copy却不行，第一个参数只能是一个文件。这怎么办？其实，python还有个 shutil.copytree(src,dst[,symlinks]) 。参数多了一个symlinks，它是一个布尔值，如果是True的话就创建符号链接。<br/><br/>移动或者重命名文件和目录呢？估计被聪明的朋友猜到了，shutil.move(src,dst)，呵呵。。与mv命令类似，如果src和dst在同一个文件系统上，shutil.move只是简单改一下名字，如果src和dst在不同的文件系统上，shutil.move会先把src复制到dst，然后删除src文件。看到现在，大多数朋友应该已经对 python的能力有点眉目了，接下来我就列个表，介绍一下其它的函数：<br/><br/>os.chdir(dirname)<br/>把当前工作目录切换到dirname下<br/><br/>os.getcwd()<br/>返回当前的工作目录路径<br/><br/>os.chroot(dirname)<br/>把dirname作为进程的根目录。和*nix下的chroot命令类似<br/><br/>os.chmod(path,mode)<br/>更改path的权限位。mode可以是以下值(使用or)的组合：<br/><br/>os.chown(path,uid,gid)<br/>改变文件的属主。uid和gid为-1的时候不改变原来的属主。<br/><br/>os.link(src,dst)<br/>创建硬连接<br/><br/>os.mkdir(path,[mode])<br/>创建目录。mode的意义参见os.chmod()，默认是0777<br/><br/>os.makedirs(path,[mode])<br/>和os.mkdir()类似，不过会先创建不存在的父目录。<br/><br/>os.readlink(path)<br/>返回path这个符号链接所指向的路径<br/><br/>os.remove(path)<br/>删除文件，不能用于删除目录<br/><br/>os.rmdir(path)<br/>删除文件夹，不能用于删除文件<br/><br/>os.symlink(src,dst)<br/>创建符号链接<br/><br/>shutil.rmtree(path[,ignore_errors[,onerror]])<br/><br/>删除文件夹<br/>介绍了这么多，其实只要查一下os和shutil两个模块的文档就有了，呵呵。。真正编写 shell脚本的时候还需要注意：<br/><br/>1.环境变量。python的环境变量保存在os.environ这个字典里，可以用普通字典的方法修改它，使用system启动其它程序的时候会自动被继承。比如：<br/><br/>os.environ[”fish”]=”nothing”<br/>不过也要注意，环境变量的值只能是字符串。和shell有些不同的是，python没有 export环境变量这个概念。为什么没有呢？因为python没有必要有:-)<br/><br/>2.os.path这个模块里包含了很多关于路径名处理的函数。在shell里路径名处理好像不是很重要，但是在python里经常需要用到。最常用的两个是分离和合并目录名和文件名：<br/><br/>os.path.split(path) -> (dirname,basename)<br/>这个函数会把一个路径分离为两部分，比如：os.path.split(”/foo /bar.dat”)会返回(”/foo”,”bar.dat”)<br/><br/>os.path.join(dirname,basename)<br/>这个函数会把目录名和文件名组合成一个完整的路径名，比如：os.path.join(”/foo”,”bar.dat”)会返回”/foo/bar.dat”。这个函数和os.path.split()刚好相反。<br/><br/>4. 应用python编写shell脚本经常要用到os,shutil,glob(正则表达式的文件名),tempfile(临时文件),pwd(操作 /etc/passwd文件),grp(操作/etc/group文件),commands(取得一个命令的输出)。前面两个已经基本上介绍完了，后面几个很简单，看一下文档就可以了。<br/><br/>5.sys.argv是一个列表，保存了python程序的命令行参数。其中 sys.argv[0]是程序本身的名字。<br/>不能光说不练，接下来我们就编写一个用于复制文件的简单脚本。前两天叫我写脚本的同事有个几万个文件的目录，他想复制这些文件到其它的目录，又不能直接复制目录本身。他试了一下”cp src/* dest/”结果报了一个命令行太长的错误，让我帮他写一个脚本。操起python来：<br/>import sys,os.path,shutil<br/>for f in os.listdir(sys.argv[1]):<br/>    shutil.copy(os.path.join(sys.argv[1],f),sys.argv[2])<br/><p>Copyright © 2008</p><p><a href="http://www.cnpythoner.com/post/316.html" target="_blank">继续阅读《python编写调用shell命令脚本》的全文内容...</a></p><p>分类: <a href="http://www.cnpythoner.com/catalog.asp?cate=16">it运维管理系统和软件</a> | Tags:  | <a href="http://www.cnpythoner.com/post/316.html#comment" target="_blank">添加评论</a>(0)</p><p><a href="http://www.cnpythoner.com/post/316.html#comment" target="_blank">还没有相关文章，您来说两句？</a></p>]]></description><category>it运维管理系统和软件</category><comments>http://www.cnpythoner.com/post/316.html#comment</comments><wfw:comment>http://www.cnpythoner.com/</wfw:comment><wfw:commentRss>http://www.cnpythoner.com/feed.asp?cmt=316</wfw:commentRss><trackback:ping>http://www.cnpythoner.com/cmd.asp?act=tb&amp;id=316&amp;key=9547091d</trackback:ping></item><item><title>python被越来越多的SEO人员重视</title><author>a@b.com (laowang)</author><link>http://www.cnpythoner.com/post/315.html</link><pubDate>Fri, 04 Oct 2013 14:40:26 +0800</pubDate><guid>http://www.cnpythoner.com/post/315.html</guid><description><![CDATA[ 很久没写文章了，先祝大家国庆快乐！从今年开始发现越来越多的seo人开始慢慢地研究技术，也越来越重视技术，这是一个非常好的现象，毕竟流量是通过网站获取的。网站的搭建的过程从头到尾无不充斥着相关的技术，比如HTTP请求，HTML,CSS,网页后端的逻辑处理等。<br/>对SEO人员来说，把技术学好有2个好处：<br/>1 对技术了解的越好，就越能够控制一个网站，能够按照你的想法来走。<br/><br/>2 如果是在大型网站做SEO的话，基本上每天都会和技术和数据打交道。可能每天都是在写代码地方式来做SEO，或者你需要和公司的技术部门来配合做网站的相关的优化工作，对技术越了解，就能和技术人员更好的沟通需求。<br/><br/>所以SEO人员掌握相关的技术还是非常有必要的。<br/><br/>比如seo前线：<a href="http://www.seoqianxian.com/question/39" target="_blank">http://www.seoqianxian.com/question/39</a> 这篇帖子里写的python在SEO方面的应用。我用python也写了相关的应用，这里只是简单的列出一些<a href="http://www.cnpythoner.com/catalog.asp?cate=15" target="_blank">http://www.cnpythoner.com/catalog.asp?cate=15</a>。<br/><br/>另外<a href="http://www.cnpythoner.com/peixun/info.html" target="_blank">老王python推出python培训</a>，零基础，系统培训，适合SEO人员从基础开始，学习语言并且处理SEO方面的事情。<p>Copyright © 2008</p><p><a href="http://www.cnpythoner.com/post/315.html" target="_blank">继续阅读《python被越来越多的SEO人员重视》的全文内容...</a></p><p>分类: <a href="http://www.cnpythoner.com/catalog.asp?cate=15">seo和python</a> | Tags:  | <a href="http://www.cnpythoner.com/post/315.html#comment" target="_blank">添加评论</a>(0)</p><p><a href="http://www.cnpythoner.com/post/315.html#comment" target="_blank">还没有相关文章，您来说两句？</a></p>]]></description><category>seo和python</category><comments>http://www.cnpythoner.com/post/315.html#comment</comments><wfw:comment>http://www.cnpythoner.com/</wfw:comment><wfw:commentRss>http://www.cnpythoner.com/feed.asp?cmt=315</wfw:commentRss><trackback:ping>http://www.cnpythoner.com/cmd.asp?act=tb&amp;id=315&amp;key=15e2dfca</trackback:ping></item><item><title>urllib2添加header头</title><author>a@b.com (laowang)</author><link>http://www.cnpythoner.com/post/314.html</link><pubDate>Thu, 01 Aug 2013 19:48:38 +0800</pubDate><guid>http://www.cnpythoner.com/post/314.html</guid><description><![CDATA[ 我们用python urllib2做采集时候，为了防止对方网站很容易发现，我们一般都会用程序模拟header头过去，就好像是一个用户来访问采集的网站，这样不容易被屏蔽。在python的官方文档上写了怎么添加，还是有同学有疑问，今天写出来希望能够帮助大家。<br/><br/>先导入模块,然后添加相关的属性。<br/><br/>import urllib2<br/>opener = urllib2.build_opener()<br/>opener.addheaders = [('User-agent', 'Mozilla/5.0')]##浏览器的标示<br/>opener.open('http://www.baidu.com/')<br/><br/>上面的浏览器的标示你可以换成其他的都行。<p>Copyright © 2008</p><p><a href="http://www.cnpythoner.com/post/314.html" target="_blank">继续阅读《urllib2添加header头》的全文内容...</a></p><p>分类: <a href="http://www.cnpythoner.com/catalog.asp?cate=1">python教程</a> | Tags:  | <a href="http://www.cnpythoner.com/post/314.html#comment" target="_blank">添加评论</a>(0)</p><p><a href="http://www.cnpythoner.com/post/314.html#comment" target="_blank">还没有相关文章，您来说两句？</a></p>]]></description><category>python教程</category><comments>http://www.cnpythoner.com/post/314.html#comment</comments><wfw:comment>http://www.cnpythoner.com/</wfw:comment><wfw:commentRss>http://www.cnpythoner.com/feed.asp?cmt=314</wfw:commentRss><trackback:ping>http://www.cnpythoner.com/cmd.asp?act=tb&amp;id=314&amp;key=151f1e88</trackback:ping></item><item><title>python程序批量挖掘百度长尾关键词</title><author>a@b.com (laowang)</author><link>http://www.cnpythoner.com/post/313.html</link><pubDate>Sun, 14 Jul 2013 13:15:04 +0800</pubDate><guid>http://www.cnpythoner.com/post/313.html</guid><description><![CDATA[<p>&nbsp; &nbsp;挖掘长尾关键词的工具有很多，比如爱站，chinaz的。目前感觉chinaz的百度权重的关键词可以挖掘到一些。比如我需要挖掘</p><p>这个域名：www.yoger.com.cn 的百度关键词。</p><p>http://mytool.chinaz.com/baidusort.aspx?host=www.yoger.com.cn</p><p>算了下，大概可以挖掘到600个关键词，一页有20个，有30页的数据。</p><p>目前有python做了这个应用，能够批量挖掘百度长尾关键词。我们只需要收集行业里面的网站，放入去查询就行。</p><p>下面是采集www.yoger.com.cn的数据结果：只是截取了其中的一点图。</p><p>数据库设计：meky：关键词，indexnum:百度指数，sitenum:百度收录数。</p><p><img onload="ResizeImage(this,520)" src="http://www.cnpythoner.com/upload/link.jpg" alt="" title="" /></p><p>用程序采集关键词比人工的效率要高很多。我们目前的<a href="http://www.cnpythoner.com/peixun/info.html" target="_blank">python培训</a>也有面向SEO人员，比如百度爬虫等。</p><p>Copyright © 2008</p><p><a href="http://www.cnpythoner.com/post/313.html" target="_blank">继续阅读《python程序批量挖掘百度长尾关键词》的全文内容...</a></p><p>分类: <a href="http://www.cnpythoner.com/catalog.asp?cate=15">seo和python</a> | Tags:  | <a href="http://www.cnpythoner.com/post/313.html#comment" target="_blank">添加评论</a>(1)</p><p><a href="http://www.cnpythoner.com/post/313.html#comment" target="_blank">还没有相关文章，您来说两句？</a></p>]]></description><category>seo和python</category><comments>http://www.cnpythoner.com/post/313.html#comment</comments><wfw:comment>http://www.cnpythoner.com/</wfw:comment><wfw:commentRss>http://www.cnpythoner.com/feed.asp?cmt=313</wfw:commentRss><trackback:ping>http://www.cnpythoner.com/cmd.asp?act=tb&amp;id=313&amp;key=75d3103d</trackback:ping></item><item><title>python 算术运算符</title><author>a@b.com (laowang)</author><link>http://www.cnpythoner.com/post/312.html</link><pubDate>Sat, 22 Jun 2013 11:26:11 +0800</pubDate><guid>http://www.cnpythoner.com/post/312.html</guid><description><![CDATA[<p><span lang="zh-CN" id="result_box" class="short_text"><span>下表列出了</span><span>所有</span><span>支持</span><span>Python语言</span><span>的</span><span>算术运算符</span><span>。</span></span></p><table class="src">    <tbody>        <tr>            <th style="width:10%">Operator</th>            <th style="width:45%">Description</th>            <th>Example</th>        </tr>        <tr>            <td>+</td>            <td>Addition - Adds values on either side of the operator</td>            <td>a + b will give 30</td>        </tr>        <tr>            <td>-</td>            <td>Subtraction - Subtracts right hand operand from left hand operand</td>            <td>a - b will give -10</td>        </tr>        <tr>            <td>*</td>            <td>Multiplication - Multiplies values on either side of the operator</td>            <td>a * b will give 200</td>        </tr>        <tr>            <td>/</td>            <td>Division - Divides left hand operand by right hand operand</td>            <td>b / a will give 2</td>        </tr>        <tr>            <td>%</td>            <td>Modulus - Divides left hand operand by right hand operand and returns remainder</td>            <td>b % a will give 0</td>        </tr>        <tr>            <td>**</td>            <td>Exponent - Performs exponential (power) calculation on operators</td>            <td>a**b will give 10 to the power 20</td>        </tr>        <tr>            <td>//</td>            <td>Floor Division - The division of operands where the result is the quotient in which the digits after the decimal point are removed.</td>            <td>9//2 is equal to 4 and 9.0//2.0 is equal to 4.0</td>        </tr>    </tbody></table><p>相信了解了上面的应用，对你用python操作一些算术运算有帮助</p><p>Copyright © 2008</p><p><a href="http://www.cnpythoner.com/post/312.html" target="_blank">继续阅读《python 算术运算符》的全文内容...</a></p><p>分类: <a href="http://www.cnpythoner.com/catalog.asp?cate=11">python 入门教程</a> | Tags:  | <a href="http://www.cnpythoner.com/post/312.html#comment" target="_blank">添加评论</a>(0)</p><p><a href="http://www.cnpythoner.com/post/312.html#comment" target="_blank">还没有相关文章，您来说两句？</a></p>]]></description><category>python 入门教程</category><comments>http://www.cnpythoner.com/post/312.html#comment</comments><wfw:comment>http://www.cnpythoner.com/</wfw:comment><wfw:commentRss>http://www.cnpythoner.com/feed.asp?cmt=312</wfw:commentRss><trackback:ping>http://www.cnpythoner.com/cmd.asp?act=tb&amp;id=312&amp;key=46403cbc</trackback:ping></item><item><title>python 保留字</title><author>a@b.com (laowang)</author><link>http://www.cnpythoner.com/post/311.html</link><pubDate>Sat, 22 Jun 2013 11:16:00 +0800</pubDate><guid>http://www.cnpythoner.com/post/311.html</guid><description><![CDATA[<p>下面的列表显示了在Python中的保留字。这些保留字不能用作常数或变数，或任何其他标识符名称。所有Python的关键字只包含小写字母.</p><table class="src">    <tbody>        <tr>            <td>and</td>            <td>exec</td>            <td>not</td>        </tr>        <tr>            <td>assert</td>            <td>finally</td>            <td>or</td>        </tr>        <tr>            <td>break</td>            <td>for</td>            <td>pass</td>        </tr>        <tr>            <td>class</td>            <td>from</td>            <td>print</td>        </tr>        <tr>            <td>continue</td>            <td>global</td>            <td>raise</td>        </tr>        <tr>            <td>def</td>            <td>if</td>            <td>return</td>        </tr>        <tr>            <td>del</td>            <td>import</td>            <td>try</td>        </tr>        <tr>            <td>elif</td>            <td>in</td>            <td>while</td>        </tr>        <tr>            <td>else</td>            <td>is</td>            <td>with</td>        </tr>        <tr>            <td>except</td>            <td>lambda</td>            <td>yield</td>        </tr>    </tbody></table><p>Copyright © 2008</p><p><a href="http://www.cnpythoner.com/post/311.html" target="_blank">继续阅读《python 保留字》的全文内容...</a></p><p>分类: <a href="http://www.cnpythoner.com/catalog.asp?cate=11">python 入门教程</a> | Tags:  | <a href="http://www.cnpythoner.com/post/311.html#comment" target="_blank">添加评论</a>(1)</p><p><a href="http://www.cnpythoner.com/post/311.html#comment" target="_blank">还没有相关文章，您来说两句？</a></p>]]></description><category>python 入门教程</category><comments>http://www.cnpythoner.com/post/311.html#comment</comments><wfw:comment>http://www.cnpythoner.com/</wfw:comment><wfw:commentRss>http://www.cnpythoner.com/feed.asp?cmt=311</wfw:commentRss><trackback:ping>http://www.cnpythoner.com/cmd.asp?act=tb&amp;id=311&amp;key=fe11b1ea</trackback:ping></item></channel></rss>
